{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport qs from 'qs';\nfunction sendEmail(_x) {\n  return _sendEmail.apply(this, arguments);\n}\nfunction _sendEmail() {\n  _sendEmail = _asyncToGenerator(function* (to) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      cc = _ref.cc,\n      bcc = _ref.bcc,\n      subject = _ref.subject,\n      body = _ref.body,\n      _ref$checkCanOpen = _ref.checkCanOpen,\n      checkCanOpen = _ref$checkCanOpen === void 0 ? true : _ref$checkCanOpen;\n    var url = 'mailto:';\n    if (to) {\n      var toStr = Array.isArray(to) ? to.join(',') : to;\n      url += encodeURIComponent(toStr);\n      if (cc) {\n        cc = Array.isArray(cc) ? cc.join(',') : cc;\n      }\n      if (bcc) {\n        bcc = Array.isArray(bcc) ? bcc.join(',') : bcc;\n      }\n      var query = qs.stringify({\n        cc: cc,\n        bcc: bcc,\n        subject: subject,\n        body: body\n      });\n      if (query.length) {\n        url += \"?\" + query;\n      }\n    }\n    if (checkCanOpen) {\n      var supported = yield Linking.canOpenURL(url);\n      if (!supported) {\n        return Promise.reject(new Error('Provided URL can not be handled'));\n      }\n    }\n    return Linking.openURL(url);\n  });\n  return _sendEmail.apply(this, arguments);\n}\nexport default sendEmail;","map":{"version":3,"names":["qs","sendEmail","_x","_sendEmail","apply","arguments","_asyncToGenerator","to","_ref","length","undefined","cc","bcc","subject","body","_ref$checkCanOpen","checkCanOpen","url","toStr","Array","isArray","join","encodeURIComponent","query","stringify","supported","Linking","canOpenURL","Promise","reject","Error","openURL"],"sources":["C:/Users/Asus/Desktop/appTutor/node_modules/react-native-email/index.js"],"sourcesContent":["import { Linking } from 'react-native'\nimport qs from 'qs'\n\nasync function sendEmail (to, { cc, bcc, subject, body, checkCanOpen = true } = {}) {\n  let url = 'mailto:'\n\n  if (to) {\n    const toStr = Array.isArray(to) ? to.join(',') : to\n    url += encodeURIComponent(toStr)\n\n    if (cc) {\n      cc = Array.isArray(cc) ? cc.join(',') : cc\n    }\n\n    if (bcc) {\n      bcc = Array.isArray(bcc) ? bcc.join(',') : bcc\n    }\n\n    const query = qs.stringify({ cc, bcc, subject, body })\n\n    if (query.length) {\n      url += `?${query}`\n    }\n  }\n\n  if (checkCanOpen) {\n    const supported = await Linking.canOpenURL(url)\n    if (!supported) {\n      return Promise.reject(new Error('Provided URL can not be handled'))\n    }\n  }\n\n  return Linking.openURL(url)\n}\n\nexport default sendEmail\n"],"mappings":";;AACA,OAAOA,EAAE,MAAM,IAAI;AAAA,SAEJC,SAASA,CAAAC,EAAA;EAAA,OAAAC,UAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,WAAA;EAAAA,UAAA,GAAAG,iBAAA,CAAxB,WAA0BC,EAAE,EAAwD;IAAA,IAAAC,IAAA,GAAAH,SAAA,CAAAI,MAAA,QAAAJ,SAAA,QAAAK,SAAA,GAAAL,SAAA,MAAJ,CAAC,CAAC;MAAlDM,EAAE,GAAAH,IAAA,CAAFG,EAAE;MAAEC,GAAG,GAAAJ,IAAA,CAAHI,GAAG;MAAEC,OAAO,GAAAL,IAAA,CAAPK,OAAO;MAAEC,IAAI,GAAAN,IAAA,CAAJM,IAAI;MAAAC,iBAAA,GAAAP,IAAA,CAAEQ,YAAY;MAAZA,YAAY,GAAAD,iBAAA,cAAG,IAAI,GAAAA,iBAAA;IACzE,IAAIE,GAAG,GAAG,SAAS;IAEnB,IAAIV,EAAE,EAAE;MACN,IAAMW,KAAK,GAAGC,KAAK,CAACC,OAAO,CAACb,EAAE,CAAC,GAAGA,EAAE,CAACc,IAAI,CAAC,GAAG,CAAC,GAAGd,EAAE;MACnDU,GAAG,IAAIK,kBAAkB,CAACJ,KAAK,CAAC;MAEhC,IAAIP,EAAE,EAAE;QACNA,EAAE,GAAGQ,KAAK,CAACC,OAAO,CAACT,EAAE,CAAC,GAAGA,EAAE,CAACU,IAAI,CAAC,GAAG,CAAC,GAAGV,EAAE;MAC5C;MAEA,IAAIC,GAAG,EAAE;QACPA,GAAG,GAAGO,KAAK,CAACC,OAAO,CAACR,GAAG,CAAC,GAAGA,GAAG,CAACS,IAAI,CAAC,GAAG,CAAC,GAAGT,GAAG;MAChD;MAEA,IAAMW,KAAK,GAAGvB,EAAE,CAACwB,SAAS,CAAC;QAAEb,EAAE,EAAFA,EAAE;QAAEC,GAAG,EAAHA,GAAG;QAAEC,OAAO,EAAPA,OAAO;QAAEC,IAAI,EAAJA;MAAK,CAAC,CAAC;MAEtD,IAAIS,KAAK,CAACd,MAAM,EAAE;QAChBQ,GAAG,UAAQM,KAAO;MACpB;IACF;IAEA,IAAIP,YAAY,EAAE;MAChB,IAAMS,SAAS,SAASC,OAAO,CAACC,UAAU,CAACV,GAAG,CAAC;MAC/C,IAAI,CAACQ,SAAS,EAAE;QACd,OAAOG,OAAO,CAACC,MAAM,CAAC,IAAIC,KAAK,CAAC,iCAAiC,CAAC,CAAC;MACrE;IACF;IAEA,OAAOJ,OAAO,CAACK,OAAO,CAACd,GAAG,CAAC;EAC7B,CAAC;EAAA,OAAAd,UAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAED,eAAeJ,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}