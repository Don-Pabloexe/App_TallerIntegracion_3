{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ChatScreen = function ChatScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    newMessage = _useState4[0],\n    setNewMessage = _useState4[1];\n  var _useState5 = useState('Usuario An贸nimo'),\n    _useState6 = _slicedToArray(_useState5, 2),\n    username = _useState6[0],\n    setUsername = _useState6[1];\n  useEffect(function () {\n    loadMessages();\n  }, []);\n  var loadMessages = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var storedMessages = yield AsyncStorage.getItem('chatMessages');\n        if (storedMessages) {\n          setMessages(JSON.parse(storedMessages));\n        }\n      } catch (error) {\n        console.error('Error loading messages:', error);\n      }\n    });\n    return function loadMessages() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var saveMessages = function () {\n    var _ref2 = _asyncToGenerator(function* (messagesToSave) {\n      try {\n        yield AsyncStorage.setItem('chatMessages', JSON.stringify(messagesToSave));\n        setMessages(messagesToSave);\n      } catch (error) {\n        console.error('Error saving messages:', error);\n      }\n    });\n    return function saveMessages(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var sendMessage = function sendMessage() {\n    if (newMessage.trim() !== '') {\n      var updatedMessages = [].concat(_toConsumableArray(messages), [{\n        text: newMessage,\n        username: username\n      }]);\n      saveMessages(updatedMessages);\n      setNewMessage('');\n    }\n  };\n  return _jsxs(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Chat Simple\"\n    }), _jsx(FlatList, {\n      data: messages,\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item;\n        return _jsx(View, {\n          style: [styles.messageContainer, username === item.username ? styles.myMessage : styles.otherMessage],\n          children: _jsx(Text, {\n            style: styles.messageText,\n            children: item.text\n          })\n        });\n      },\n      keyExtractor: function keyExtractor(item, index) {\n        return index.toString();\n      },\n      contentContainerStyle: styles.messagesList\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Escribe un mensaje\",\n        value: newMessage,\n        onChangeText: function onChangeText(text) {\n          return setNewMessage(text);\n        }\n      }), _jsx(TouchableOpacity, {\n        style: styles.sendButton,\n        onPress: sendMessage,\n        children: _jsx(Text, {\n          style: styles.sendButtonText,\n          children: \"Enviar\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F0F0F0'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginVertical: 16,\n    textAlign: 'center'\n  },\n  messagesList: {\n    paddingHorizontal: 16,\n    paddingBottom: 16\n  },\n  messageContainer: {\n    backgroundColor: '#E3E3E3',\n    borderRadius: 8,\n    padding: 8,\n    marginBottom: 8,\n    maxWidth: '80%'\n  },\n  myMessage: {\n    alignSelf: 'flex-end',\n    backgroundColor: '#007AFF',\n    color: 'white'\n  },\n  otherMessage: {\n    alignSelf: 'flex-start'\n  },\n  messageText: {\n    fontSize: 16,\n    color: '#333'\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    borderTopWidth: 1,\n    borderTopColor: '#CCC',\n    backgroundColor: 'white',\n    alignItems: 'center'\n  },\n  input: {\n    flex: 1,\n    borderWidth: 1,\n    borderColor: '#007AFF',\n    borderRadius: 8,\n    paddingVertical: 8,\n    paddingHorizontal: 12\n  },\n  sendButton: {\n    backgroundColor: '#007AFF',\n    borderRadius: 8,\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    marginLeft: 8\n  },\n  sendButtonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  }\n});\nexport default ChatScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TextInput","Button","FlatList","StyleSheet","TouchableOpacity","KeyboardAvoidingView","Platform","AsyncStorage","jsx","_jsx","jsxs","_jsxs","ChatScreen","_useState","_useState2","_slicedToArray","messages","setMessages","_useState3","_useState4","newMessage","setNewMessage","_useState5","_useState6","username","setUsername","loadMessages","_ref","_asyncToGenerator","storedMessages","getItem","JSON","parse","error","console","apply","arguments","saveMessages","_ref2","messagesToSave","setItem","stringify","_x","sendMessage","trim","updatedMessages","concat","_toConsumableArray","text","style","styles","container","behavior","OS","children","title","data","renderItem","_ref3","item","messageContainer","myMessage","otherMessage","messageText","keyExtractor","index","toString","contentContainerStyle","messagesList","inputContainer","input","placeholder","value","onChangeText","sendButton","onPress","sendButtonText","create","flex","backgroundColor","fontSize","fontWeight","marginVertical","textAlign","paddingHorizontal","paddingBottom","borderRadius","padding","marginBottom","maxWidth","alignSelf","color","flexDirection","paddingVertical","borderTopWidth","borderTopColor","alignItems","borderWidth","borderColor","marginLeft"],"sources":["C:/Users/Asus/Desktop/appTutor/src/complementos/Tutores.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  Button,\n  FlatList,\n  StyleSheet,\n  TouchableOpacity,\n  KeyboardAvoidingView,\n  Platform,\n} from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst ChatScreen = () => {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [username, setUsername] = useState('Usuario An贸nimo');\n\n  useEffect(() => {\n    // Carga los mensajes almacenados en AsyncStorage cuando el componente se monta\n    loadMessages();\n  }, []);\n\n  // Funci贸n para cargar mensajes almacenados en AsyncStorage\n  const loadMessages = async () => {\n    try {\n      const storedMessages = await AsyncStorage.getItem('chatMessages');\n      if (storedMessages) {\n        setMessages(JSON.parse(storedMessages));\n      }\n    } catch (error) {\n      console.error('Error loading messages:', error);\n    }\n  };\n\n  // Funci贸n para guardar mensajes en AsyncStorage y actualizar el estado\n  const saveMessages = async (messagesToSave) => {\n    try {\n      await AsyncStorage.setItem('chatMessages', JSON.stringify(messagesToSave));\n      setMessages(messagesToSave);\n    } catch (error) {\n      console.error('Error saving messages:', error);\n    }\n  };\n\n  const sendMessage = () => {\n    if (newMessage.trim() !== '') {\n      const updatedMessages = [...messages, { text: newMessage, username }];\n      saveMessages(updatedMessages);\n      setNewMessage('');\n    }\n  };\n\n  return (\n    <KeyboardAvoidingView\n      style={styles.container}\n      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n    >\n      <Text style={styles.title}>Chat Simple</Text>\n      <FlatList\n        data={messages}\n        renderItem={({ item }) => (\n          <View\n            style={[\n              styles.messageContainer,\n              username === item.username ? styles.myMessage : styles.otherMessage,\n            ]}\n          >\n            <Text style={styles.messageText}>{item.text}</Text>\n          </View>\n        )}\n        keyExtractor={(item, index) => index.toString()}\n        contentContainerStyle={styles.messagesList}\n      />\n      <View style={styles.inputContainer}>\n        <TextInput\n          style={styles.input}\n          placeholder=\"Escribe un mensaje\"\n          value={newMessage}\n          onChangeText={(text) => setNewMessage(text)}\n        />\n        <TouchableOpacity style={styles.sendButton} onPress={sendMessage}>\n          <Text style={styles.sendButtonText}>Enviar</Text>\n        </TouchableOpacity>\n      </View>\n    </KeyboardAvoidingView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F0F0F0',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginVertical: 16,\n    textAlign: 'center',\n  },\n  messagesList: {\n    paddingHorizontal: 16,\n    paddingBottom: 16,\n  },\n  messageContainer: {\n    backgroundColor: '#E3E3E3',\n    borderRadius: 8,\n    padding: 8,\n    marginBottom: 8,\n    maxWidth: '80%',\n  },\n  myMessage: {\n    alignSelf: 'flex-end',\n    backgroundColor: '#007AFF',\n    color: 'white',\n  },\n  otherMessage: {\n    alignSelf: 'flex-start',\n  },\n  messageText: {\n    fontSize: 16,\n    color: '#333',\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    borderTopWidth: 1,\n    borderTopColor: '#CCC',\n    backgroundColor: 'white',\n    alignItems: 'center',\n  },\n  input: {\n    flex: 1,\n    borderWidth: 1,\n    borderColor: '#007AFF',\n    borderRadius: 8,\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n  },\n  sendButton: {\n    backgroundColor: '#007AFF',\n    borderRadius: 8,\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    marginLeft: 8,\n  },\n  sendButtonText: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n});\n\nexport default ChatScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}