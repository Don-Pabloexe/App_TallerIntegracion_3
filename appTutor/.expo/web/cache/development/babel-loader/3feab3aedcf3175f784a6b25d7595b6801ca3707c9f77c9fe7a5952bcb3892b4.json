{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport HomeScreen from \"./Home\";\nimport DetailsScreen from \"./Salas\";\nimport Tutores from \"./Tutores\";\nimport Horarios from \"./Horarios\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar color = \"#1A9CEC\";\nvar SECONDcolor = \"#FFF8C8\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\nvar AppNavigator = function AppNavigator() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      initialRouteName: \"Inicio\",\n      children: [_jsx(Tab.Screen, {\n        name: \"Inicio\",\n        component: HomeScreen,\n        options: function options(_ref) {\n          var route = _ref.route;\n          return {\n            headerTitleAlign: 'center',\n            backgroundColor: SECONDcolor,\n            headerStyle: {\n              backgroundColor: color\n            },\n            headerTintColor: 'white',\n            tabBarLabel: '',\n            tabBarIcon: function tabBarIcon(_ref2) {\n              var focused = _ref2.focused;\n              return _jsxs(View, {\n                style: {\n                  alignItems: 'center'\n                },\n                children: [_jsx(Image, {\n                  source: require(\"./../img/18625.png\"),\n                  style: {\n                    width: 30,\n                    height: 30,\n                    tintColor: focused ? color : 'gray'\n                  }\n                }), _jsx(Text, {\n                  style: {\n                    color: focused ? color : 'gray'\n                  },\n                  children: \"Inicio\"\n                })]\n              });\n            }\n          };\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Salas\",\n        component: DetailsScreen,\n        options: function options(_ref3) {\n          var route = _ref3.route;\n          return {\n            headerTitleAlign: 'center',\n            tabBarLabel: '',\n            headerTintColor: 'white',\n            headerStyle: {\n              backgroundColor: color\n            },\n            headerTintColor: 'white',\n            tabBarIcon: function tabBarIcon(_ref4) {\n              var focused = _ref4.focused;\n              return _jsxs(View, {\n                style: {\n                  alignItems: 'center'\n                },\n                children: [_jsx(Image, {\n                  source: require(\"./../img/SalaLogo.png\"),\n                  style: {\n                    width: 30,\n                    height: 30,\n                    tintColor: focused ? color : 'gray'\n                  }\n                }), _jsx(Text, {\n                  style: {\n                    color: focused ? color : 'gray'\n                  },\n                  children: \"Salas\"\n                })]\n              });\n            }\n          };\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Tutores\",\n        component: Tutores,\n        options: function options(_ref5) {\n          var route = _ref5.route;\n          return {\n            headerTitleAlign: 'center',\n            tabBarLabel: '',\n            headerStyle: {\n              backgroundColor: color\n            },\n            headerTintColor: 'white',\n            tabBarIcon: function tabBarIcon(_ref6) {\n              var focused = _ref6.focused;\n              return _jsxs(View, {\n                style: {\n                  alignItems: 'center'\n                },\n                children: [_jsx(Image, {\n                  source: require(\"./../img/tutores.png\"),\n                  style: {\n                    width: 30,\n                    height: 30,\n                    tintColor: focused ? color : 'gray'\n                  }\n                }), _jsx(Text, {\n                  style: {\n                    color: focused ? color : 'gray'\n                  },\n                  children: \"Tutores\"\n                })]\n              });\n            }\n          };\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Horarios\",\n        component: Horarios,\n        options: function options(_ref7) {\n          var route = _ref7.route;\n          return {\n            headerTitleAlign: 'center',\n            tabBarLabel: '',\n            headerStyle: {\n              backgroundColor: color\n            },\n            headerTintColor: 'white',\n            tabBarIcon: function tabBarIcon(_ref8) {\n              var focused = _ref8.focused;\n              return _jsxs(View, {\n                style: {\n                  alignItems: 'center'\n                },\n                children: [_jsx(Image, {\n                  source: require(\"./../img/libreta.png\"),\n                  style: {\n                    width: 30,\n                    height: 30,\n                    tintColor: focused ? color : 'gray'\n                  }\n                }), _jsx(Text, {\n                  style: {\n                    color: focused ? color : 'gray'\n                  },\n                  children: \"Horas\"\n                })]\n              });\n            }\n          };\n        }\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  conjunto: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    left: 100\n  },\n  titulo: {\n    left: 200,\n    fontSize: 26\n  }\n});\nexport default AppNavigator;","map":{"version":3,"names":["React","NavigationContainer","createStackNavigator","createBottomTabNavigator","HomeScreen","DetailsScreen","Tutores","Horarios","Image","View","Text","StyleSheet","jsx","_jsx","jsxs","_jsxs","color","SECONDcolor","Stack","Tab","AppNavigator","children","Navigator","initialRouteName","Screen","name","component","options","_ref","route","headerTitleAlign","backgroundColor","headerStyle","headerTintColor","tabBarLabel","tabBarIcon","_ref2","focused","style","alignItems","source","require","width","height","tintColor","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","styles","create","conjunto","flexDirection","left","titulo","fontSize"],"sources":["C:/Users/Asus/Desktop/appTutor/src/complementos/navigation.jsx"],"sourcesContent":["import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport HomeScreen from './Home';\nimport DetailsScreen from './Salas';\nimport Tutores from './Tutores';\nimport Horarios from './Horarios';\nimport { Image, View, Text, StyleSheet } from 'react-native';\nconst color = \"#1A9CEC\"\nconst SECONDcolor = \"#FFF8C8\"\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator()\nconst AppNavigator = () => {\n  return (\n    <NavigationContainer>\n      <Tab.Navigator initialRouteName=\"Inicio\" >\n        <Tab.Screen name=\"Inicio\" component={HomeScreen}\n        options={({ route }) => ({\n          headerTitleAlign: 'center',\n          backgroundColor: SECONDcolor,\n          headerStyle: {\n            backgroundColor: color, // Cambia el color de fondo del encabezado\n          },\n          headerTintColor: 'white',\n          tabBarLabel: '',\n          tabBarIcon: ({ focused }) => (\n            <View style={{ alignItems: 'center' }}>\n              <Image\n                source={require('./../img/18625.png')}\n                style={{\n                  width: 30,\n                  height: 30,\n                  tintColor: focused ? color : 'gray', // Cambiar el color de la imagen cuando esté seleccionada\n                }}\n              />\n              <Text style={{ color: focused ? color : 'gray' }}>Inicio</Text>\n            </View>\n          ),\n        })}/>\n        <Tab.Screen name=\"Salas\" component={DetailsScreen}\n        options={({ route }) => ({\n          headerTitleAlign: 'center',\n          tabBarLabel: '',\n          headerTintColor: 'white',\n          headerStyle: {\n            backgroundColor: color, // Cambia el color de fondo del encabezado\n          },\n          headerTintColor: 'white',\n          tabBarIcon: ({ focused }) => (\n            <View style={{ alignItems: 'center' }}>\n              <Image\n                source={require('./../img/SalaLogo.png')}\n                style={{\n                  width: 30,\n                  height: 30,\n                  tintColor: focused ? color : 'gray', // Cambiar el color de la imagen cuando esté seleccionada\n                }}\n              />\n              <Text style={{ color: focused ? color : 'gray' }}>Salas</Text>\n            </View>\n          ),\n        })}/>\n        \n        <Tab.Screen name=\"Tutores\" component={Tutores}\n        options={({ route }) => ({\n          headerTitleAlign: 'center',\n          tabBarLabel: '',\n          headerStyle: {\n            backgroundColor: color, // Cambia el color de fondo del encabezado\n          },\n          headerTintColor: 'white',\n          tabBarIcon: ({ focused }) => (\n            <View style={{ alignItems: 'center' }}>\n              <Image\n                source={require('./../img/tutores.png')}\n                style={{\n                  width: 30,\n                  height: 30,\n                  tintColor: focused ? color : 'gray', // Cambiar el color de la imagen cuando esté seleccionada\n                }}\n              />\n              <Text style={{ color: focused ? color : 'gray' }}>Tutores</Text>\n            </View>\n          ),\n        })}/>\n        <Tab.Screen name=\"Horarios\" component={Horarios}\n        options={({ route }) => ({\n          headerTitleAlign: 'center',\n          tabBarLabel: '',\n          headerStyle: {\n            backgroundColor: color, // Cambia el color de fondo del encabezado\n          },\n          headerTintColor: 'white',\n          tabBarIcon: ({ focused }) => (\n            <View style={{ alignItems: 'center' }}>\n              <Image\n                source={require('./../img/libreta.png')}\n                style={{\n                  width: 30,\n                  height: 30,\n                  tintColor: focused ? color : 'gray', // Cambiar el color de la imagen cuando esté seleccionada\n                }}\n              />\n              <Text style={{ color: focused ? color : 'gray' }}>Horas</Text>\n            </View>\n          ),\n        })}/>\n      </Tab.Navigator>\n      \n    </NavigationContainer>\n  );\n};\nconst styles = StyleSheet.create({\n  conjunto:{\n    flexDirection: 'row', alignItems: 'center', left: 100 \n  },\n  titulo:{\n    left: 200,\n    fontSize: 26\n  },\n});\n\nexport default AppNavigator;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}