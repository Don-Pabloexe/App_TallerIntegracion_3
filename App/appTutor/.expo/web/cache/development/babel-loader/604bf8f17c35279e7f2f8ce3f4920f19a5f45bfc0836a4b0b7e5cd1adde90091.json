{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport React from \"react-native-web/dist/index\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport NativeEventEmitter from \"react-native-web/dist/exports/NativeEventEmitter\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar Voice = NativeModules.Voice;\nvar voiceEmitter = Platform.OS !== \"web\" ? new NativeEventEmitter(Voice) : null;\nvar RCTVoice = function () {\n  function RCTVoice() {\n    _classCallCheck(this, RCTVoice);\n    this._loaded = false;\n    this._listeners = null;\n    this._events = {\n      'onSpeechStart': this._onSpeechStart.bind(this),\n      'onSpeechRecognized': this._onSpeechRecognized.bind(this),\n      'onSpeechEnd': this._onSpeechEnd.bind(this),\n      'onSpeechError': this._onSpeechError.bind(this),\n      'onSpeechResults': this._onSpeechResults.bind(this),\n      'onSpeechPartialResults': this._onSpeechPartialResults.bind(this),\n      'onSpeechVolumeChanged': this._onSpeechVolumeChanged.bind(this)\n    };\n  }\n  _createClass(RCTVoice, [{\n    key: \"removeAllListeners\",\n    value: function removeAllListeners() {\n      Voice.onSpeechStart = null;\n      Voice.onSpeechRecognized = null;\n      Voice.onSpeechEnd = null;\n      Voice.onSpeechError = null;\n      Voice.onSpeechResults = null;\n      Voice.onSpeechPartialResults = null;\n      Voice.onSpeechVolumeChanged = null;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this = this;\n      if (!this._loaded && !this._listeners) {\n        return Promise.resolve();\n      }\n      return new Promise(function (resolve, reject) {\n        Voice.destroySpeech(function (error) {\n          if (error) {\n            reject(new Error(error));\n          } else {\n            if (_this._listeners) {\n              _this._listeners.map(function (listener, index) {\n                return listener.remove();\n              });\n              _this._listeners = null;\n            }\n            resolve();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"start\",\n    value: function start(locale) {\n      var _this2 = this;\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (!this._loaded && !this._listeners && voiceEmitter !== null) {\n        this._listeners = Object.keys(this._events).map(function (key, index) {\n          return voiceEmitter.addListener(key, _this2._events[key]);\n        });\n      }\n      return new Promise(function (resolve, reject) {\n        var callback = function callback(error) {\n          if (error) {\n            reject(new Error(error));\n          } else {\n            resolve();\n          }\n        };\n        if (Platform.OS === 'android') {\n          Voice.startSpeech(locale, Object.assign({\n            EXTRA_LANGUAGE_MODEL: \"LANGUAGE_MODEL_FREE_FORM\",\n            EXTRA_MAX_RESULTS: 5,\n            EXTRA_PARTIAL_RESULTS: true,\n            REQUEST_PERMISSIONS_AUTO: true\n          }, options), callback);\n        } else {\n          Voice.startSpeech(locale, callback);\n        }\n      });\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (!this._loaded && !this._listeners) {\n        return Promise.resolve();\n      }\n      return new Promise(function (resolve, reject) {\n        Voice.stopSpeech(function (error) {\n          if (error) {\n            reject(new Error(error));\n          } else {\n            resolve();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      if (!this._loaded && !this._listeners) {\n        return Promise.resolve();\n      }\n      return new Promise(function (resolve, reject) {\n        Voice.cancelSpeech(function (error) {\n          if (error) {\n            reject(new Error(error));\n          } else {\n            resolve();\n          }\n        });\n      });\n    }\n  }, {\n    key: \"isAvailable\",\n    value: function isAvailable() {\n      return new Promise(function (resolve, reject) {\n        Voice.isSpeechAvailable(function (isAvailable, error) {\n          if (error) {\n            reject(new Error(error));\n          } else {\n            resolve(isAvailable);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"isRecognizing\",\n    value: function isRecognizing() {\n      return new Promise(function (resolve, reject) {\n        Voice.isRecognizing(function (isRecognizing) {\n          return resolve(isRecognizing);\n        });\n      });\n    }\n  }, {\n    key: \"_onSpeechStart\",\n    value: function _onSpeechStart(e) {\n      if (this.onSpeechStart) {\n        this.onSpeechStart(e);\n      }\n    }\n  }, {\n    key: \"_onSpeechRecognized\",\n    value: function _onSpeechRecognized(e) {\n      if (this.onSpeechRecognized) {\n        this.onSpeechRecognized(e);\n      }\n    }\n  }, {\n    key: \"_onSpeechEnd\",\n    value: function _onSpeechEnd(e) {\n      if (this.onSpeechEnd) {\n        this.onSpeechEnd(e);\n      }\n    }\n  }, {\n    key: \"_onSpeechError\",\n    value: function _onSpeechError(e) {\n      if (this.onSpeechError) {\n        this.onSpeechError(e);\n      }\n    }\n  }, {\n    key: \"_onSpeechResults\",\n    value: function _onSpeechResults(e) {\n      if (this.onSpeechResults) {\n        this.onSpeechResults(e);\n      }\n    }\n  }, {\n    key: \"_onSpeechPartialResults\",\n    value: function _onSpeechPartialResults(e) {\n      if (this.onSpeechPartialResults) {\n        this.onSpeechPartialResults(e);\n      }\n    }\n  }, {\n    key: \"_onSpeechVolumeChanged\",\n    value: function _onSpeechVolumeChanged(e) {\n      if (this.onSpeechVolumeChanged) {\n        this.onSpeechVolumeChanged(e);\n      }\n    }\n  }]);\n  return RCTVoice;\n}();\nexport default new RCTVoice();","map":{"version":3,"names":["_classCallCheck","_createClass","React","NativeModules","NativeEventEmitter","Platform","Voice","voiceEmitter","OS","RCTVoice","_loaded","_listeners","_events","_onSpeechStart","bind","_onSpeechRecognized","_onSpeechEnd","_onSpeechError","_onSpeechResults","_onSpeechPartialResults","_onSpeechVolumeChanged","key","value","removeAllListeners","onSpeechStart","onSpeechRecognized","onSpeechEnd","onSpeechError","onSpeechResults","onSpeechPartialResults","onSpeechVolumeChanged","destroy","_this","Promise","resolve","reject","destroySpeech","error","Error","map","listener","index","remove","start","locale","_this2","options","arguments","length","undefined","Object","keys","addListener","callback","startSpeech","assign","EXTRA_LANGUAGE_MODEL","EXTRA_MAX_RESULTS","EXTRA_PARTIAL_RESULTS","REQUEST_PERMISSIONS_AUTO","stop","stopSpeech","cancel","cancelSpeech","isAvailable","isSpeechAvailable","isRecognizing","e"],"sources":["C:/Users/pgome/OneDrive/Escritorio/appTutor/node_modules/react-native-dialogflow/js/RCTVoice.js"],"sourcesContent":["'use strict';\nimport React, {\n    NativeModules,\n    NativeEventEmitter,\n    Platform,\n} from 'react-native';\n\nconst { Voice } = NativeModules;\n\n// NativeEventEmitter is only availabe on React Native platforms, so this conditional is used to avoid import conflicts in the browser/server\nconst voiceEmitter = Platform.OS !== \"web\" ? new NativeEventEmitter(Voice) : null;\n\nclass RCTVoice {\n    constructor() {\n        this._loaded = false;\n        this._listeners = null;\n        this._events = {\n            'onSpeechStart': this._onSpeechStart.bind(this),\n            'onSpeechRecognized': this._onSpeechRecognized.bind(this),\n            'onSpeechEnd': this._onSpeechEnd.bind(this),\n            'onSpeechError': this._onSpeechError.bind(this),\n            'onSpeechResults': this._onSpeechResults.bind(this),\n            'onSpeechPartialResults': this._onSpeechPartialResults.bind(this),\n            'onSpeechVolumeChanged': this._onSpeechVolumeChanged.bind(this)\n        };\n    }\n    removeAllListeners() {\n        Voice.onSpeechStart = null;\n        Voice.onSpeechRecognized = null;\n        Voice.onSpeechEnd = null;\n        Voice.onSpeechError = null;\n        Voice.onSpeechResults = null;\n        Voice.onSpeechPartialResults = null;\n        Voice.onSpeechVolumeChanged = null;\n    }\n    destroy() {\n        if (!this._loaded && !this._listeners) {\n            return Promise.resolve();\n        }\n        return new Promise((resolve, reject) => {\n            Voice.destroySpeech((error) => {\n                if (error) {\n                    reject(new Error(error));\n                } else {\n                    if (this._listeners) {\n                        this._listeners.map((listener, index) => listener.remove());\n                        this._listeners = null;\n                    }\n                    resolve();\n                }\n            });\n        });\n    }\n    start(locale, options = {}) {\n        if (!this._loaded && !this._listeners && voiceEmitter !== null) {\n            this._listeners = Object.keys(this._events)\n                .map((key, index) => voiceEmitter.addListener(key, this._events[key]));\n        }\n\n        return new Promise((resolve, reject) => {\n            const callback = (error) => {\n                if (error) {\n                    reject(new Error(error));\n                } else {\n                    resolve();\n                }\n            };\n            if (Platform.OS === 'android') {\n                Voice.startSpeech(locale, Object.assign({\n                    EXTRA_LANGUAGE_MODEL: \"LANGUAGE_MODEL_FREE_FORM\",\n                    EXTRA_MAX_RESULTS: 5,\n                    EXTRA_PARTIAL_RESULTS: true,\n                    REQUEST_PERMISSIONS_AUTO: true,\n                }, options), callback);\n            } else {\n                Voice.startSpeech(locale, callback);\n            }\n        });\n    }\n    stop() {\n        if (!this._loaded && !this._listeners) {\n            return Promise.resolve();\n        }\n        return new Promise((resolve, reject) => {\n            Voice.stopSpeech((error) => {\n                if (error) {\n                    reject(new Error(error));\n                } else {\n                    resolve();\n                }\n            });\n        });\n    }\n    cancel() {\n        if (!this._loaded && !this._listeners) {\n            return Promise.resolve();\n        }\n        return new Promise((resolve, reject) => {\n            Voice.cancelSpeech((error) => {\n                if (error) {\n                    reject(new Error(error));\n                } else {\n                    resolve();\n                }\n            });\n        });\n    }\n    isAvailable() {\n        return new Promise((resolve, reject) => {\n            Voice.isSpeechAvailable((isAvailable, error) => {\n                if (error) {\n                    reject(new Error(error));\n                } else {\n                    resolve(isAvailable);\n                }\n            });\n        });\n    }\n    isRecognizing() {\n        return new Promise((resolve, reject) => {\n            Voice.isRecognizing(isRecognizing => resolve(isRecognizing));\n        });\n    }\n    _onSpeechStart(e) {\n        if (this.onSpeechStart) {\n            this.onSpeechStart(e);\n        }\n    }\n    _onSpeechRecognized(e) {\n        if (this.onSpeechRecognized) {\n            this.onSpeechRecognized(e);\n        }\n    }\n    _onSpeechEnd(e) {\n        if (this.onSpeechEnd) {\n            this.onSpeechEnd(e);\n        }\n    }\n    _onSpeechError(e) {\n        if (this.onSpeechError) {\n            this.onSpeechError(e);\n        }\n    }\n    _onSpeechResults(e) {\n        if (this.onSpeechResults) {\n            this.onSpeechResults(e);\n        }\n    }\n    _onSpeechPartialResults(e) {\n        if (this.onSpeechPartialResults) {\n            this.onSpeechPartialResults(e);\n        }\n    }\n    _onSpeechVolumeChanged(e) {\n        if (this.onSpeechVolumeChanged) {\n            this.onSpeechVolumeChanged(e);\n        }\n    }\n}\n\nexport default new RCTVoice();"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}