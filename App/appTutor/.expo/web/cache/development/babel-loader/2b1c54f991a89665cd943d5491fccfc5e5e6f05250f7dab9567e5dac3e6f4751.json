{"ast":null,"code":"'use strict';\n\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport googleAuth from \"./googleAuth/GoogleAuth\";\nimport ResetContextsRequest from \"./ResetContextsRequest\";\nexport var DEFAULT_BASE_URL = \"https://dialogflow.googleapis.com/v2beta1/projects/\";\nexport var Dialogflow_V2 = function () {\n  function Dialogflow_V2() {\n    var _this = this;\n    _classCallCheck(this, Dialogflow_V2);\n    this.requestEvent = function () {\n      var _ref = _asyncToGenerator(function* (eventName, eventParameters, onResult, onError) {\n        var data = {\n          \"queryParams\": {\n            \"contexts\": _this.mergeContexts(_this.contexts, _this.permanentContexts),\n            \"sessionEntityTypes\": []\n          },\n          \"queryInput\": {\n            \"event\": {\n              \"name\": eventName,\n              \"parameters\": eventParameters,\n              \"languageCode\": _this.languageTag\n            }\n          }\n        };\n        _this.contexts = null;\n        _this.entities = null;\n        fetch(DEFAULT_BASE_URL + _this.projectId + \"/agent/sessions/\" + _this.sessionId + \":detectIntent\", {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json; charset=utf-8',\n            'Authorization': 'Bearer ' + _this.accessToken,\n            'charset': \"utf-8\"\n          },\n          body: JSON.stringify(data)\n        }).then(function (response) {\n          var json = response.json().then(onResult);\n        }).catch(onError);\n      });\n      return function (_x, _x2, _x3, _x4) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    this.requestQuery = function () {\n      var _ref2 = _asyncToGenerator(function* (query, onResult, onError) {\n        var data = {\n          \"queryParams\": {\n            \"contexts\": _this.mergeContexts(_this.contexts, _this.permanentContexts),\n            \"sessionEntityTypes\": []\n          },\n          \"queryInput\": {\n            \"text\": {\n              \"text\": query,\n              \"languageCode\": _this.languageTag\n            }\n          }\n        };\n        _this.contexts = null;\n        _this.entities = null;\n        fetch(DEFAULT_BASE_URL + _this.projectId + \"/agent/sessions/\" + _this.sessionId + \":detectIntent\", {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json; charset=utf-8',\n            'Authorization': 'Bearer ' + _this.accessToken,\n            'charset': \"utf-8\"\n          },\n          body: JSON.stringify(data)\n        }).then(function (response) {\n          var json = response.json().then(onResult);\n        }).catch(onError);\n      });\n      return function (_x5, _x6, _x7) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    this.LANG_CHINESE_CHINA = \"zh-CN\";\n    this.LANG_CHINESE_HONGKONG = \"zh-HK\";\n    this.LANG_CHINESE_TAIWAN = \"zh-TW\";\n    this.LANG_DUTCH = \"nl\";\n    this.LANG_ENGLISH = \"en\";\n    this.LANG_ENGLISH_GB = \"en-GB\";\n    this.LANG_ENGLISH_US = \"en-US\";\n    this.LANG_FRENCH = \"fr\";\n    this.LANG_GERMAN = \"de\";\n    this.LANG_ITALIAN = \"it\";\n    this.LANG_JAPANESE = \"ja\";\n    this.LANG_KOREAN = \"ko\";\n    this.LANG_PORTUGUESE = \"pt\";\n    this.LANG_PORTUGUESE_BRAZIL = \"pt-BR\";\n    this.LANG_RUSSIAN = \"ru\";\n    this.LANG_SPANISH = \"es\";\n    this.LANG_UKRAINIAN = \"uk\";\n  }\n  _createClass(Dialogflow_V2, [{\n    key: \"onListeningStarted\",\n    value: function onListeningStarted(callback) {\n      this.onListeningStarted = callback;\n    }\n  }, {\n    key: \"onListeningCanceled\",\n    value: function onListeningCanceled(callback) {\n      this.onListeningCanceled = callback;\n    }\n  }, {\n    key: \"onListeningFinished\",\n    value: function onListeningFinished(callback) {\n      this.onListeningFinished = callback;\n    }\n  }, {\n    key: \"setContexts\",\n    value: function setContexts(contexts) {\n      var _this2 = this;\n      var array = contexts;\n      array.forEach(function (c, i, a) {\n        a[i] = _this2.normalizeContext(c);\n      });\n      this.contexts = array;\n    }\n  }, {\n    key: \"setPermanentContexts\",\n    value: function setPermanentContexts(contexts) {\n      var _this3 = this;\n      contexts.forEach(function (c, i, a) {\n        a[i] = _this3.normalizeContext(c);\n        if (!c.lifespanCount) {\n          a[i] = _objectSpread(_objectSpread({}, c), {}, {\n            lifespanCount: 1\n          });\n        }\n      });\n      this.permanentContexts = contexts;\n    }\n  }, {\n    key: \"normalizeContext\",\n    value: function normalizeContext(context) {\n      if (context.lifespan) {\n        context.lifespanCount = context.lifespan;\n        delete context.lifespan;\n      }\n      if (!context.name.startsWith(\"projects/\")) {\n        context.name = \"projects/\" + this.projectId + \"/agent/sessions/\" + this.sessionId + \"/contexts/\" + context.name;\n      }\n      return context;\n    }\n  }, {\n    key: \"onAudioLevel\",\n    value: function onAudioLevel(callback) {}\n  }, {\n    key: \"mergeContexts\",\n    value: function mergeContexts(context1, context2) {\n      if (!context1) {\n        return context2;\n      } else if (!context2) {\n        return context1;\n      } else {\n        return [].concat(_toConsumableArray(context1), _toConsumableArray(context2));\n      }\n    }\n  }, {\n    key: \"resetContexts\",\n    value: function resetContexts(onResult, onError) {\n      var request = new ResetContextsRequest(this.client.getAccessToken(), this.client.getSessionId(), null);\n      request.perform().then(function (res) {\n        return onResult(res);\n      }).catch(function (err) {\n        return onError(err);\n      });\n    }\n  }, {\n    key: \"guid\",\n    value: function guid() {\n      var s4 = function s4() {\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n      };\n      return s4() + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + s4() + s4() + s4();\n    }\n  }, {\n    key: \"generateAccessToken\",\n    value: function () {\n      var _generateAccessToken = _asyncToGenerator(function* (clientEmail, privateKey) {\n        var token;\n        try {\n          token = yield googleAuth(clientEmail, privateKey, ['https://www.googleapis.com/auth/cloud-platform']);\n        } catch (e) {\n          console.error(\"react-native-dialogflow: Authentication Error: \" + e);\n          throw new Error(\"react-native-dialogflow: Authentication Error: \" + e);\n        } finally {\n          return token;\n        }\n      });\n      function generateAccessToken(_x8, _x9) {\n        return _generateAccessToken.apply(this, arguments);\n      }\n      return generateAccessToken;\n    }()\n  }]);\n  return Dialogflow_V2;\n}();","map":{"version":3,"names":["_toConsumableArray","_defineProperty","_asyncToGenerator","_classCallCheck","_createClass","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","googleAuth","ResetContextsRequest","DEFAULT_BASE_URL","Dialogflow_V2","_this","requestEvent","_ref","eventName","eventParameters","onResult","onError","data","mergeContexts","contexts","permanentContexts","languageTag","entities","fetch","projectId","sessionId","method","headers","accessToken","body","JSON","stringify","then","response","json","catch","_x","_x2","_x3","_x4","requestQuery","_ref2","query","_x5","_x6","_x7","LANG_CHINESE_CHINA","LANG_CHINESE_HONGKONG","LANG_CHINESE_TAIWAN","LANG_DUTCH","LANG_ENGLISH","LANG_ENGLISH_GB","LANG_ENGLISH_US","LANG_FRENCH","LANG_GERMAN","LANG_ITALIAN","LANG_JAPANESE","LANG_KOREAN","LANG_PORTUGUESE","LANG_PORTUGUESE_BRAZIL","LANG_RUSSIAN","LANG_SPANISH","LANG_UKRAINIAN","value","onListeningStarted","callback","onListeningCanceled","onListeningFinished","setContexts","_this2","array","c","a","normalizeContext","setPermanentContexts","_this3","lifespanCount","context","lifespan","name","startsWith","onAudioLevel","context1","context2","concat","resetContexts","request","client","getAccessToken","getSessionId","perform","res","err","guid","s4","Math","floor","random","toString","substring","_generateAccessToken","clientEmail","privateKey","token","e","console","error","Error","generateAccessToken","_x8","_x9"],"sources":["C:/Users/pgome/OneDrive/Escritorio/appTutor/node_modules/react-native-dialogflow/js/Dialogflow_V2.js"],"sourcesContent":["'use strict';\n\nimport googleAuth from './googleAuth/GoogleAuth';\nimport ResetContextsRequest from './ResetContextsRequest';\nexport const DEFAULT_BASE_URL = \"https://dialogflow.googleapis.com/v2beta1/projects/\";\n\nexport class Dialogflow_V2 {\n\n    onListeningStarted(callback) {\n        this.onListeningStarted = callback;\n    }\n\n    onListeningCanceled(callback) {\n        this.onListeningCanceled = callback;\n    }\n\n    onListeningFinished(callback) {\n        this.onListeningFinished = callback;\n    }\n\n    setContexts(contexts) {\n        var array = contexts;\n\n        array.forEach((c, i, a) => {\n            a[i] = this.normalizeContext(c);\n        })\n\n        this.contexts = array;\n    }\n\n    setPermanentContexts(contexts) {\n        // set lifespan to 1 if it's not set\n        contexts.forEach((c, i, a) => {\n            a[i] = this.normalizeContext(c);\n\n            if (!c.lifespanCount) {\n                a[i] = { ...c, lifespanCount: 1 };\n            }\n        });\n\n        this.permanentContexts = contexts;\n    }\n\n    normalizeContext(context) {\n        // rename property lifespan to lifespanCount\n        if (context.lifespan) {\n            context.lifespanCount = context.lifespan;\n            delete context.lifespan;\n        }\n\n        // add context name path: projects/<Project ID>/agent/sessions/<Session ID>/contexts/<Context ID>\n        // https://dialogflow.com/docs/reference/api-v2/rest/v2beta1/projects.agent.sessions.contexts#Context\n        if (!context.name.startsWith(\"projects/\")) {\n            context.name = \"projects/\" + this.projectId + \"/agent/sessions/\" + this.sessionId + \"/contexts/\" + context.name;\n        }\n\n        return context;\n    }\n\n    /*\n    setEntities(entities) {\n        this.entities = entities;\n    }\n    */\n\n    onAudioLevel(callback) {\n\n    }\n\n    requestEvent = async (eventName, eventParameters, onResult, onError) => {\n\n        const data = {\n            \"queryParams\": {\n                \"contexts\": this.mergeContexts(this.contexts, this.permanentContexts),\n                \"sessionEntityTypes\": []\n            },\n            \"queryInput\": {\n                \"event\": {\n                    \"name\": eventName,\n                    \"parameters\": eventParameters,\n                    \"languageCode\": this.languageTag,\n                },\n            }\n        }\n\n        this.contexts = null;\n        this.entities = null;\n\n        fetch(DEFAULT_BASE_URL + this.projectId + \"/agent/sessions/\" + this.sessionId + \":detectIntent\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json; charset=utf-8',\n                'Authorization': 'Bearer ' + this.accessToken,\n                'charset': \"utf-8\"\n            },\n            body: JSON.stringify(data)\n        })\n            .then(function (response) {\n                var json = response.json().then(onResult)\n            })\n            .catch(onError);\n    };\n\n\n    requestQuery = async (query, onResult, onError) => {\n\n        const data = {\n            \"queryParams\": {\n                \"contexts\": this.mergeContexts(this.contexts, this.permanentContexts),\n                \"sessionEntityTypes\": []\n            },\n            \"queryInput\": {\n                \"text\": {\n                    \"text\": query,\n                    \"languageCode\": this.languageTag,\n                },\n            }\n        }\n\n        this.contexts = null;\n        this.entities = null;\n\n        fetch(DEFAULT_BASE_URL + this.projectId + \"/agent/sessions/\" + this.sessionId + \":detectIntent\", {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json; charset=utf-8',\n                'Authorization': 'Bearer ' + this.accessToken,\n                'charset': \"utf-8\"\n            },\n            body: JSON.stringify(data)\n        })\n            .then(function (response) {\n                var json = response.json().then(onResult)\n            })\n            .catch(onError);\n    };\n\n\n    mergeContexts(context1, context2) {\n        if (!context1) {\n            return context2;\n        } else if (!context2) {\n            return context1;\n        } else {\n            return [...context1, ...context2];\n        }\n    }\n\n    resetContexts(onResult, onError) {\n        let request = new ResetContextsRequest(this.client.getAccessToken(), this.client.getSessionId(), null);\n        request.perform().then(res => onResult(res)).catch(err => onError(err));\n    };\n\n    /**\n     * generates new random UUID\n     * @returns {string}\n     */\n    guid() {\n        const s4 = () => Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n        return s4() + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" +\n            s4() + \"-\" + s4() + s4() + s4();\n    }\n\n    async generateAccessToken(clientEmail, privateKey) {\n        let token;\n        try {\n            token = await googleAuth(clientEmail, privateKey, ['https://www.googleapis.com/auth/cloud-platform']);\n        } catch (e) {\n            console.error(\"react-native-dialogflow: Authentication Error: \" + e);\n            throw new Error(\"react-native-dialogflow: Authentication Error: \" + e);\n        } finally {\n            return token;\n        }\n    }\n\n\n    LANG_CHINESE_CHINA = \"zh-CN\";\n    LANG_CHINESE_HONGKONG = \"zh-HK\";\n    LANG_CHINESE_TAIWAN = \"zh-TW\";\n    LANG_DUTCH = \"nl\";\n    LANG_ENGLISH = \"en\";\n    LANG_ENGLISH_GB = \"en-GB\";\n    LANG_ENGLISH_US = \"en-US\";\n    LANG_FRENCH = \"fr\";\n    LANG_GERMAN = \"de\";\n    LANG_ITALIAN = \"it\";\n    LANG_JAPANESE = \"ja\";\n    LANG_KOREAN = \"ko\";\n    LANG_PORTUGUESE = \"pt\";\n    LANG_PORTUGUESE_BRAZIL = \"pt-BR\";\n    LANG_RUSSIAN = \"ru\";\n    LANG_SPANISH = \"es\";\n    LANG_UKRAINIAN = \"uk\";\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}