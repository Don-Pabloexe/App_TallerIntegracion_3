{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { GiftedChat, Bubble, Send } from 'react-native-gifted-chat';\nimport { Dialogflow_V2 } from 'react-native-dialogflow';\nimport { dialogflowConfig } from \"./env\";\nimport { format } from 'date-fns';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Botavatar = require(\"./../img/perro.jpg\");\nvar BOT = {\n  _id: 2,\n  name: 'PerritoBot',\n  avatar: Botavatar\n};\nvar Chatbot = function (_Component) {\n  _inherits(Chatbot, _Component);\n  var _super = _createSuper(Chatbot);\n  function Chatbot() {\n    var _this;\n    _classCallCheck(this, Chatbot);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      messages: [{\n        _id: 2,\n        text: 'Soy el perro-bot tu asistente, ¿Qué necesitas?',\n        createdAt: new Date(),\n        user: BOT\n      }, {\n        _id: 1,\n        text: 'Hola!',\n        createdAt: new Date(),\n        user: BOT\n      }],\n      id: 1,\n      name: '',\n      isChatOpen: false\n    };\n    return _this;\n  }\n  _createClass(Chatbot, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      Dialogflow_V2.setConfiguration(dialogflowConfig.client_email, dialogflowConfig.private_key, Dialogflow_V2.LANG_SPANISH, dialogflowConfig.project_id);\n    }\n  }, {\n    key: \"handleGoogleResponse\",\n    value: function handleGoogleResponse(result) {\n      var text = result.queryResult.fulfillmentMessages[0].text.text[0];\n      this.sendBotResponse(text);\n    }\n  }, {\n    key: \"sendBotResponse\",\n    value: function sendBotResponse(text) {\n      var msg = {\n        _id: this.state.messages.length + 1,\n        text: text,\n        createdAt: new Date(),\n        user: BOT\n      };\n      this.setState(function (previousState) {\n        return {\n          messages: GiftedChat.append(previousState.messages, [msg])\n        };\n      });\n    }\n  }, {\n    key: \"onSend\",\n    value: function onSend() {\n      var _this2 = this;\n      var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      this.setState(function (previousState) {\n        return {\n          messages: GiftedChat.append(previousState.messages, messages)\n        };\n      });\n      var message = messages[0].text;\n      Dialogflow_V2.requestQuery(message, function (result) {\n        return _this2.handleGoogleResponse(result);\n      }, function (error) {\n        return console.log(error);\n      });\n    }\n  }, {\n    key: \"onQuickReply\",\n    value: function onQuickReply(quickReply) {\n      var _this3 = this;\n      this.setState(function (previousState) {\n        return {\n          messages: GiftedChat.append(previousState.messages, quickReply)\n        };\n      });\n      var message = quickReply[0].value;\n      Dialogflow_V2.requestQuery(message, function (result) {\n        return _this3.handleGoogleResponse(result);\n      }, function (error) {\n        return console.log(error);\n      });\n    }\n  }, {\n    key: \"renderBubble\",\n    value: function renderBubble(props) {\n      return _jsx(Bubble, _objectSpread(_objectSpread({}, props), {}, {\n        wrapperStyle: {\n          right: {\n            backgroundColor: '#38f5f5'\n          },\n          left: {\n            backgroundColor: '#E5E5EA'\n          }\n        }\n      }));\n    }\n  }, {\n    key: \"formatChatDate\",\n    value: function formatChatDate(date) {\n      return format(date, \"dd/MM/yyyy HH:mm\");\n    }\n  }, {\n    key: \"renderSend\",\n    value: function renderSend(props) {\n      return _jsx(Send, _objectSpread(_objectSpread({}, props), {}, {\n        children: _jsxs(View, {\n          style: {\n            marginRight: 10,\n            marginBottom: 5\n          },\n          children: [_jsx(Text, {\n            style: {\n              color: '#0084FF'\n            },\n            children: \"Enviar\"\n          }), \" \"]\n        })\n      }));\n    }\n  }, {\n    key: \"toggleChat\",\n    value: function toggleChat() {\n      this.setState(function (prevState) {\n        return {\n          isChatOpen: !prevState.isChatOpen\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n      var isChatOpen = this.state.isChatOpen;\n      return _jsxs(SafeAreaView, {\n        style: {\n          flex: 1\n        },\n        children: [_jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this4.toggleChat();\n          },\n          style: {\n            position: 'absolute',\n            bottom: 60,\n            right: 10,\n            backgroundColor: '#0084FF',\n            borderRadius: 30,\n            width: 60,\n            height: 60,\n            alignItems: 'center',\n            justifyContent: 'center',\n            zIndex: 999\n          },\n          children: _jsx(Text, {\n            style: {\n              color: 'white',\n              fontSize: 20\n            },\n            children: \"Chat\"\n          })\n        }), isChatOpen && _jsx(View, {\n          style: {\n            position: 'absolute',\n            top: 10,\n            left: -300,\n            width: '500%',\n            height: '100%',\n            backgroundColor: '#FAF3E0'\n          },\n          children: _jsx(GiftedChat, {\n            messages: this.state.messages,\n            onSend: function onSend(message) {\n              return _this4.onSend(message);\n            },\n            onQuickReply: function onQuickReply(quickReply) {\n              return _this4.onQuickReply(quickReply);\n            },\n            user: {\n              _id: 1\n            },\n            renderBubble: this.renderBubble,\n            dateFormat: 'll HH:mm',\n            locale: 'es'\n          })\n        })]\n      });\n    }\n  }]);\n  return Chatbot;\n}(Component);\nexport default Chatbot;","map":{"version":3,"names":["React","Component","View","Text","SafeAreaView","TouchableOpacity","Modal","GiftedChat","Bubble","Send","Dialogflow_V2","dialogflowConfig","format","jsx","_jsx","jsxs","_jsxs","Botavatar","require","BOT","_id","name","avatar","Chatbot","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","messages","text","createdAt","Date","user","id","isChatOpen","_createClass","key","value","componentDidMount","setConfiguration","client_email","private_key","LANG_SPANISH","project_id","handleGoogleResponse","result","queryResult","fulfillmentMessages","sendBotResponse","msg","setState","previousState","append","onSend","_this2","undefined","message","requestQuery","error","console","log","onQuickReply","quickReply","_this3","renderBubble","props","_objectSpread","wrapperStyle","right","backgroundColor","left","formatChatDate","date","renderSend","children","style","marginRight","marginBottom","color","toggleChat","prevState","render","_this4","flex","onPress","position","bottom","borderRadius","width","height","alignItems","justifyContent","zIndex","fontSize","top","dateFormat","locale"],"sources":["C:/Users/pgome/OneDrive/Escritorio/appTutor/src/complementos/chatbot.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { View, Text, SafeAreaView, TouchableOpacity, Modal } from 'react-native';\r\nimport { GiftedChat, Bubble, Send } from 'react-native-gifted-chat';\r\nimport { Dialogflow_V2 } from 'react-native-dialogflow';\r\nimport { dialogflowConfig } from './env';\r\nimport { format } from 'date-fns';\r\n\r\nconst Botavatar = require('./../img/perro.jpg');\r\n\r\nconst BOT = {\r\n  _id: 2,\r\n  name: 'PerritoBot',\r\n  avatar: Botavatar,\r\n};\r\n\r\nclass Chatbot extends Component {\r\n  state = {\r\n    messages: [\r\n      {\r\n        _id: 2,\r\n        text: 'Soy el perro-bot tu asistente, ¿Qué necesitas?',\r\n        createdAt: new Date(),\r\n        user: BOT,\r\n      },\r\n      {\r\n        _id: 1,\r\n        text: 'Hola!',\r\n        createdAt: new Date(),\r\n        user: BOT,\r\n      },\r\n    ],\r\n    id: 1,\r\n    name: '',\r\n    isChatOpen: false, // Agregamos un estado para controlar la apertura y cierre del chat\r\n  };\r\n\r\n  componentDidMount() {\r\n    Dialogflow_V2.setConfiguration(\r\n      dialogflowConfig.client_email,\r\n      dialogflowConfig.private_key,\r\n      Dialogflow_V2.LANG_SPANISH,\r\n      dialogflowConfig.project_id\r\n    );\r\n  }\r\n\r\n  handleGoogleResponse(result) {\r\n    let text = result.queryResult.fulfillmentMessages[0].text.text[0];\r\n\r\n    this.sendBotResponse(text);\r\n  }\r\n\r\n  sendBotResponse(text) {\r\n    let msg = {\r\n      _id: this.state.messages.length + 1,\r\n      text,\r\n      createdAt: new Date(),\r\n      user: BOT,\r\n    };\r\n\r\n    this.setState((previousState) => ({\r\n      messages: GiftedChat.append(previousState.messages, [msg]),\r\n    }));\r\n  }\r\n\r\n  onSend(messages = []) {\r\n    this.setState((previousState) => ({\r\n      messages: GiftedChat.append(previousState.messages, messages),\r\n    }));\r\n    let message = messages[0].text;\r\n\r\n    Dialogflow_V2.requestQuery(\r\n      message,\r\n      (result) => this.handleGoogleResponse(result),\r\n      (error) => console.log(error)\r\n    );\r\n  }\r\n\r\n  onQuickReply(quickReply) {\r\n    this.setState((previousState) => ({\r\n      messages: GiftedChat.append(previousState.messages, quickReply),\r\n    }));\r\n    let message = quickReply[0].value;\r\n\r\n    Dialogflow_V2.requestQuery(\r\n      message,\r\n      (result) => this.handleGoogleResponse(result),\r\n      (error) => console.log(error)\r\n    );\r\n  }\r\n\r\n  renderBubble(props) {\r\n    return (\r\n      <Bubble\r\n        {...props}\r\n        wrapperStyle={{\r\n          right: {\r\n            backgroundColor: '#38f5f5', // Color para los mensajes de la persona\r\n          },\r\n          left: {\r\n            backgroundColor: '#E5E5EA', // Color para los mensajes del bot\r\n          },\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  formatChatDate(date) {\r\n    return format(date, \"dd/MM/yyyy HH:mm\"); // Cambia el formato según tus preferencias\r\n  }\r\n\r\n  renderSend(props) {\r\n    return (\r\n      <Send {...props}>\r\n        <View style={{ marginRight: 10, marginBottom: 5 }}>\r\n          <Text style={{ color: '#0084FF' }}>Enviar</Text> {/* Cambia el texto aquí */}\r\n        </View>\r\n      </Send>\r\n    );\r\n  }\r\n\r\n  toggleChat() {\r\n    this.setState((prevState) => ({\r\n      isChatOpen: !prevState.isChatOpen,\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const { isChatOpen } = this.state;\r\n\r\n    return (\r\n      <SafeAreaView style={{ flex: 1 }}>\r\n        {/* Agregamos un botón para abrir/cerrar el chat */}\r\n        <TouchableOpacity\r\n          onPress={() => this.toggleChat()}\r\n          style={{\r\n            position: 'absolute',\r\n            bottom: 60,\r\n            right: 10,\r\n            backgroundColor: '#0084FF',\r\n            borderRadius: 30,\r\n            width: 60,\r\n            height: 60,\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            zIndex: 999,\r\n          }}\r\n        >\r\n          <Text style={{ color: 'white', fontSize: 20 }}>Chat</Text>\r\n        </TouchableOpacity>\r\n        \r\n        {/* Renderizamos el chat si está abierto */}\r\n        {isChatOpen && (\r\n          <View style={{position:'absolute', top: 10 , left: -300,width:'500%', height:'100%', backgroundColor: '#FAF3E0' }}>\r\n            <GiftedChat\r\n              messages={this.state.messages}\r\n              onSend={(message) => this.onSend(message)}\r\n              onQuickReply={(quickReply) => this.onQuickReply(quickReply)}\r\n              user={{ _id: 1 }}\r\n              renderBubble={this.renderBubble} // Utiliza la función renderBubble\r\n              dateFormat={'ll HH:mm'} // Establece el formato de la fecha\r\n              locale={'es'} // Establece el idioma a español\r\n            />\r\n          </View>\r\n        )}\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}